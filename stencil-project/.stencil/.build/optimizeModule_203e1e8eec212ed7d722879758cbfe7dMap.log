{"version":3,"names":["cdForgetCss","CdForgetStyle0","CdForget","localStorage","getItem","JSON","parse","validation","event","preventDefault","id","mobile","password","this","students","map","user","userID","enteredID","value","trim","userMobile","enteredMobile","enteredPassword","length","enteredConfirmPassword","userPassword","alert","setItem","stringify","location","href","back","render","h","Host","key","action","htmlFor","type","placeholder","ref","el","required","minlength","maxlength","onClick","bind"],"sources":["src/components/cd-forget/cd-forget.css?tag=cd-forget&encapsulation=shadow","src/components/cd-forget/cd-forget.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'cd-forget',\n  styleUrl: 'cd-forget.css',\n  shadow: true,\n})\nexport class CdForget {\n  @State() students=localStorage.getItem('studentDetails')?JSON.parse(localStorage.getItem('studentDetails')):[]\n  // @State() faculties=localStorage.getItem('facultyDetails')?JSON.parse(localStorage.getItem('facultyDetails')):[]\n\n  enteredID:HTMLInputElement;\n  enteredMobile:HTMLInputElement;\n  enteredPassword:HTMLInputElement;\n  enteredConfirmPassword:HTMLInputElement;\n  validation(event:Event){\n    event.preventDefault();\n    let id=true;\n    let mobile=true;\n    let password=true;\n    // this.faculties.map((user: { userID: string; userMobile: string; userPassword: string; })=>{\n    //   if(user.userID==this.enteredID.value.trim()){\n    //     id=false;\n    //     if(user.userMobile==this.enteredMobile.value.trim()){\n    //       mobile=false;\n    //       if(this.enteredPassword.value.trim()===this.enteredConfirmPassword.value.trim()){\n    //         password=false;\n    //         user.userPassword=this.enteredConfirmPassword.value.trim();\n    //         alert('Success')\n    //         localStorage.setItem('userData',JSON.stringify(this.faculties));\n    //         location.href='/login'\n    //       }\n    //     }\n    //   }\n    // })\n    this.students.map((user: { userID: string; userMobile: string; userPassword: string; })=>{\n      if(user.userID==this.enteredID.value.trim()){\n        id=false;\n        if(user.userMobile==this.enteredMobile.value.trim()){\n          mobile=false;\n          if(this.enteredPassword.value.trim().length>5 && this.enteredPassword.value.trim()===this.enteredConfirmPassword.value.trim()){\n            password=false;\n            user.userPassword=this.enteredConfirmPassword.value.trim();\n            alert('Success')\n            localStorage.setItem('studentDetails',JSON.stringify(this.students));\n            location.href='/login'\n          }\n        }\n      }\n    })\n    if(id) alert('Invalid ID')\n    else if(mobile) alert('Invalid mobile umber')\n    else if(this.enteredPassword.value.trim().length<5) alert('password length must be 6 character')\n    else if(password) alert(\"Password not matching\")\n  }\n  back(){\n    location.href='/login'\n  }\n  render() {\n    return (\n      <Host>\n        <form action=\"\" id='login-form'>\n          <fieldset>\n            <label htmlFor=\"\">Enter ID *</label><br />\n            <input type=\"text\" placeholder='Enter your ID' ref={el=>this.enteredID=el} required/><br />\n            <label htmlFor=\"\">Mobile *</label><br />\n            <input type=\"tel\" placeholder='Enter mobile nymber'ref={el=>this.enteredMobile=el} minlength={10} maxlength={10} required  /><br />\n            <label htmlFor=\"\">Password *</label><br />\n            <input type=\"password\" placeholder='Enter password'ref={el=>this.enteredPassword=el} required/><br />\n            <label htmlFor=\"\">Confirm Password *</label><br />\n            <input type=\"password\" placeholder='Enter password'ref={el=>this.enteredConfirmPassword=el}required/> <br /><br />\n            <div><input type=\"Submit\" onClick={this.validation.bind(this)} /> <button onClick={this.back.bind(this)}>Back</button></div>\n          </fieldset>\n        </form>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAc,uBACpB,MAAAC,EAAeD,E,MCMFE,EAAQ,M,uCACDC,aAAaC,QAAQ,kBAAkBC,KAAKC,MAAMH,aAAaC,QAAQ,mBAAmB,E,CAO5G,UAAAG,CAAWC,GACTA,EAAMC,iBACN,IAAIC,EAAG,KACP,IAAIC,EAAO,KACX,IAAIC,EAAS,KAgBbC,KAAKC,SAASC,KAAKC,IACjB,GAAGA,EAAKC,QAAQJ,KAAKK,UAAUC,MAAMC,OAAO,CAC1CV,EAAG,MACH,GAAGM,EAAKK,YAAYR,KAAKS,cAAcH,MAAMC,OAAO,CAClDT,EAAO,MACP,GAAGE,KAAKU,gBAAgBJ,MAAMC,OAAOI,OAAO,GAAKX,KAAKU,gBAAgBJ,MAAMC,SAASP,KAAKY,uBAAuBN,MAAMC,OAAO,CAC5HR,EAAS,MACTI,EAAKU,aAAab,KAAKY,uBAAuBN,MAAMC,OACpDO,MAAM,WACNxB,aAAayB,QAAQ,iBAAiBvB,KAAKwB,UAAUhB,KAAKC,WAC1DgB,SAASC,KAAK,Q,OAKtB,GAAGrB,EAAIiB,MAAM,mBACR,GAAGhB,EAAQgB,MAAM,6BACjB,GAAGd,KAAKU,gBAAgBJ,MAAMC,OAAOI,OAAO,EAAGG,MAAM,4CACrD,GAAGf,EAAUe,MAAM,wB,CAE1B,IAAAK,GACEF,SAASC,KAAK,Q,CAEhB,MAAAE,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,QAAAE,IAAA,2CAAMC,OAAO,GAAG3B,GAAG,cACjBwB,EAAA,YAAAE,IAAA,4CACEF,EAAA,SAAAE,IAAA,2CAAOE,QAAQ,IAAE,cAAmBJ,EAAA,MAAAE,IAAA,6CACpCF,EAAA,SAAAE,IAAA,2CAAOG,KAAK,OAAOC,YAAY,gBAAgBC,IAAKC,GAAI7B,KAAKK,UAAUwB,EAAIC,SAAQ,OAAET,EAAA,MAAAE,IAAA,6CACrFF,EAAA,SAAAE,IAAA,2CAAOE,QAAQ,IAAE,YAAiBJ,EAAA,MAAAE,IAAA,6CAClCF,EAAA,SAAAE,IAAA,2CAAOG,KAAK,MAAMC,YAAY,sBAAqBC,IAAKC,GAAI7B,KAAKS,cAAcoB,EAAIE,UAAW,GAAIC,UAAW,GAAIF,SAAQ,OAAIT,EAAA,MAAAE,IAAA,6CAC7HF,EAAA,SAAAE,IAAA,2CAAOE,QAAQ,IAAE,cAAmBJ,EAAA,MAAAE,IAAA,6CACpCF,EAAA,SAAAE,IAAA,2CAAOG,KAAK,WAAWC,YAAY,iBAAgBC,IAAKC,GAAI7B,KAAKU,gBAAgBmB,EAAIC,SAAQ,OAAET,EAAA,MAAAE,IAAA,6CAC/FF,EAAA,SAAAE,IAAA,2CAAOE,QAAQ,IAAE,sBAA2BJ,EAAA,MAAAE,IAAA,6CAC5CF,EAAA,SAAAE,IAAA,2CAAOG,KAAK,WAAWC,YAAY,iBAAgBC,IAAKC,GAAI7B,KAAKY,uBAAuBiB,EAAGC,SAAQ,OAAE,IAACT,EAAA,MAAAE,IAAA,6CAAMF,EAAA,MAAAE,IAAA,6CAC5GF,EAAA,OAAAE,IAAA,4CAAKF,EAAA,SAAAE,IAAA,2CAAOG,KAAK,SAASO,QAASjC,KAAKN,WAAWwC,KAAKlC,QAAS,IAACqB,EAAA,UAAAE,IAAA,2CAAQU,QAASjC,KAAKmB,KAAKe,KAAKlC,OAAK,W","ignoreList":[]}